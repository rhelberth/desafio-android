apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'dagger.hilt.android.plugin'


android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.picpay.desafio.android"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "com.picpay.desafio.android.CustomTestRunner"
    }

    buildTypes {
        debug {}
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 11
        targetCompatibility 11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    viewBinding {
        enabled = true
    }

    testOptions {
        // Used for Unit testing Android dependent elements in /test folder
        unitTests.includeAndroidResources  = true
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.core:core-ktx:$core_ktx_version"

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"

    implementation "com.google.android.material:material:$material_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    implementation 'com.google.code.gson:gson:2.8.6'

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    // OkHttp
    api(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))
    api("com.squareup.okhttp3:okhttp")
    api("com.squareup.okhttp3:logging-interceptor")

    implementation "com.squareup.picasso:picasso:$picasso_version"
    implementation "de.hdodenhof:circleimageview:$circleimageview_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test:core-ktx:$core_ktx_test_version"
    debugImplementation("androidx.fragment:fragment-testing:1.5.5")
    testImplementation "io.mockk:mockk:1.12.3"

    // teste unitario
    testImplementation 'com.google.truth:truth:1.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation 'io.mockk:mockk:1.12.3'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.7.10'


    //HILT
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")
    androidTestImplementation "com.google.dagger:hilt-android-testing:2.44"
    kaptTest 'com.google.dagger:hilt-android-compiler:2.44'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44'
    testImplementation 'com.google.dagger:hilt-android-testing:2.44'

    // Room
    implementation "androidx.room:room-ktx:2.5.0"
    implementation "androidx.room:room-runtime:2.5.0"
    implementation "androidx.room:room-paging:2.5.0"
    kapt "androidx.room:room-compiler:2.5.0"

    // ViewModel and LiveData
    def lifecycle_version = "2.5.1"
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
    implementation 'androidx.fragment:fragment-ktx:1.5.5'

    // NAVIGATION
    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:2.5.3")
    implementation("androidx.navigation:navigation-ui-ktx:2.5.3")
    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:2.5.3")
    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:2.5.3")
}

kapt {
    correctErrorTypes = true
}